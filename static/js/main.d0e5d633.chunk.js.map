{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","redux/actions/contacts.js","redux/types/index.js","components/Filter/Filter.js","redux/actions/filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","utils/storage.js","App.js","module/contacts/action.js","module/contacts/reducer.js","module/filter/action.js","module/filter/reducer.js","module/rootModule.js","module/store.js","index.js"],"names":["module","exports","formInitial","name","number","ContactForm","useState","form","setForm","dispatch","useDispatch","contacts","useSelector","state","contactsId","shortid","generate","inputHandlerContact","e","target","value","className","classes","autoComplete","onSubmit","preventDefault","find","contact","toLocaleLowerCase","toast","type","payload","htmlFor","id","onChange","Filter","TransitionGroup","length","CSSTransition","timeout","classNames","mountOnEnter","unmountOnExit","inputHandlerFilters","Contact","onClick","deleteContacts","ContactList","filteredContacts","filter","includes","getFilterContacts","component","map","key","localStorage","setItem","JSON","stringify","err","Error","items","getItem","parse","contactsData","storage","App","this","props","add","prevState","in","Component","connect","addContact","createAction","getLocalStorage","contactsReducer","createReducer","action","filterReducer","rootReducer","combineReducers","store","configureStore","reducer","rootModule","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4EACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,aAAa,kC,qUCU1DC,EAAc,CAClBC,KAAM,GACNC,OAAQ,IAsEKC,EAnEK,WAAO,IAAD,EACAC,mBAASJ,GADT,mBACjBK,EADiB,KACXC,EADW,KAElBC,EAAWC,cACXC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YAMxCG,EAAaC,IAAQC,WAErBC,EAAsB,SAACC,GAAO,IAAD,EAC3Bf,EAAOe,EAAEC,OAAOhB,KAChBiB,EAAQF,EAAEC,OAAOC,MACvBZ,EAAQ,2BAAKD,GAAN,uBAAaJ,EAAOiB,GAApB,mBAA+BL,IAAQC,YAAvC,MAoBT,OACE,yBAAKK,UAAWC,IAAQf,MACtB,0BAAMgB,aAAa,MAAMC,SAnBP,SAACN,GACrBA,EAAEO,iBADyB,IAEnBtB,EAASI,EAATJ,KAENQ,EAASe,MACP,SAACC,GAAD,OACEA,EAAQxB,KAAKyB,sBAAwBzB,EAAKyB,uBAjBhDC,YAAM,GAAD,OAAItB,EAAKJ,KAAT,6BAsBHM,EC1C+B,CACnCqB,KCHyB,cDIzBC,QDwCwBxB,IACpBC,EAAQN,IAEVM,EAAQN,KAMJ,2BAAOmB,UAAWC,IAAQ,cAAeU,QAASlB,GAAlD,OAEE,2BACEX,KAAK,OACL8B,GAAInB,EACJgB,KAAK,OACLV,MAAOb,EAAKJ,KACZ+B,SAAUjB,KAId,2BAAOI,UAAWC,IAAQ,eAA1B,SAEE,2BACEnB,KAAK,SACL2B,KAAK,OACLV,MAAOb,EAAKH,OACZ8B,SAAUjB,KAId,6BACE,4BAAQa,KAAK,UAAb,eACA,kBAAC,IAAD,U,QG1CKK,G,MA5BA,WACb,IAAMxB,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YACxCF,EAAWC,cAOjB,OACE,kBAAC0B,EAAA,EAAD,KACGzB,EAAS0B,OAAS,GACjB,kBAACC,EAAA,EAAD,CACEC,QAAS,IACTC,WAAW,SACXC,cAAY,EACZC,eAAa,GAEb,yBAAKrB,UAAU,UACb,oDACA,2BAAOlB,KAAK,SAAS2B,KAAK,OAAOI,SAhBhB,SAAChB,GAC1B,IAAME,EAAQF,EAAEC,OAAOC,MACvBX,ECV+B,SAACW,GAAD,MAAY,CAC7CU,KFA0B,eEC1BC,QAASX,GDQEuB,CAAoBvB,YEQlBwB,EAhBC,SAAC,GAA0B,IAAxBzC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQ6B,EAAS,EAATA,GACzBxB,EAAWC,cAGjB,OACE,oCACE,2BAAIP,GACJ,2BAAIC,GAEJ,4BAAQ0B,KAAK,SAASG,GAAIA,EAAIZ,UAAU,SAASwB,QAP/B,kBAAMpC,EJCA,SAACwB,GAAD,MAAS,CACrCH,KCP4B,iBDQ5BC,QAASE,GIH4Ba,CAAeb,MAOhD,OCwCSc,G,MA7CK,WAClB,IAAMpC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YAOxCqC,EAJoB,SAACC,EAAQtC,GAAT,OACxBA,EAASsC,QAAO,qBAAG9C,KACZyB,oBAAoBsB,SAASD,EAAOrB,wBAEpBuB,CANVvC,aAAY,SAACC,GAAD,OAAWA,EAAMoC,UAMOtC,GAEnD,OACE,6BACE,kBAACyB,EAAA,EAAD,CAAiBgB,UAAU,MACxBJ,EAAiBX,OACdW,EAAiBK,KAAI,SAAC1B,GAAD,OACnB,kBAACW,EAAA,EAAD,CACEgB,IAAK3B,EAAQM,GACbO,WAAW,YACXD,QAAS,IACTE,cAAY,EACZC,eAAa,GAEb,wBAAIrB,UAAU,aACZ,kBAAC,EAAYM,QAInBhB,EAAS0C,KAAI,SAAC1B,GAAD,OACX,kBAACW,EAAA,EAAD,CACEgB,IAAK3B,EAAQxB,KACbqC,WAAW,YACXD,QAAS,IACTE,cAAY,EACZC,eAAa,GAEb,wBAAIrB,UAAU,aACZ,kBAAC,EAAYM,YC7Bd,EAfJ,SAAC2B,EAAKlC,GACf,IACEmC,aAAaC,QAAQF,EAAKG,KAAKC,UAAUtC,IACzC,MAAOuC,GACP,MAAM,IAAIC,QAWC,EARH,SAAAN,GACV,IACE,IAAMO,EAAQN,aAAaO,QAAQR,GACnC,OAAOO,EAAQJ,KAAKM,MAAMF,GAAS,KACnC,MAAOF,GACP,MAAM,IAAIC,QCEVI,G,MAAeC,EAAY,aAE3BC,E,kLAEFC,KAAKC,MAAMC,IAAIL,K,yCAGEM,GACbA,EAAU3D,WAAawD,KAAKC,MAAMzD,UACpCsD,EAAa,WAAYE,KAAKC,MAAMzD,Y,+BAKtC,OACE,6BACE,kBAAC2B,EAAA,EAAD,CACEiC,IAAI,EACJ/B,WAAW,YACXD,QAAS,IACTE,cAAY,EACZC,eAAa,GAEb,yBAAKrB,UAAU,aACb,2CAGJ,kBAAC,EAAD,MACA,wCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GA5BUmD,aAuCHC,eALF,SAAC5D,GAAD,MAAY,CAAEF,SAAUE,EAAMF,aAC9B,SAACF,GAAD,MAAe,CAC1B4D,IAAK,kBAAM5D,EPxC4B,CACvCqB,KCX8B,mBDY9BC,QOsCoCiC,QAGvBS,CAAoBP,G,sBCrDtBQ,EAAaC,YAAa,eAE1B7B,EAAiB6B,YAAa,kBAE9BC,EAAkBD,YAAa,oBCG/BE,EAAkBC,YANV,CACnB,CAAE7C,GAAI,OAAQ9B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE6B,GAAI,OAAQ9B,KAAM,iBAAkBC,OAAQ,aAC9C,CAAE6B,GAAI,OAAQ9B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE6B,GAAI,OAAQ9B,KAAM,iBAAkBC,OAAQ,eAEJ,mBACzCsE,GAAa,SAAC7D,EAAOkE,GAAR,4BAAuBlE,GAAvB,CAA8BkE,EAAOhD,aADT,cAEzCe,GAAiB,SAACjC,EAAOkE,GAAR,OAChBlE,EAAMoC,QAAO,SAACtB,GAAD,OAAaA,EAAQM,KAAO8C,EAAOhD,cAHR,cAIzC6C,GAAkB,SAAC/D,EAAOkE,GAAR,OAChBA,EAAOhD,QAAkBgD,EAAOhD,QAAflB,KALsB,ICP/B8B,EAAsBgC,YAAa,gBCCnCK,EAAgBF,YAAc,GAAD,eACvCnC,GAAsB,SAAC9B,EAAOkE,GAAR,OAAmBA,EAAOhD,YCMpCkD,EALKC,YAAgB,CAClCvE,SAAUkE,EACV5B,OAAQ+B,ICCKG,EALDC,YAAe,CAC3BC,QAASC,EACTC,UAAUC,ICGZC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUR,MAAOA,GACf,kBAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.d0e5d633.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__S4QIs\",\"label-name\":\"ContactForm_label-name__HA0dU\"};","import React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { addContact } from \"../../redux/actions/contacts\";\r\n\r\nimport classes from \"./ContactForm.module.css\";\r\n\r\nconst formInitial = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst ContactForm = () => {\r\n  const [form, setForm] = useState(formInitial);\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector((state) => state.contacts);\r\n\r\n  const notifyB = () => {\r\n    toast(`${form.name} is already in contacts`);\r\n  };\r\n\r\n  const contactsId = shortid.generate();\r\n\r\n  const inputHandlerContact = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setForm({ ...form, [name]: value, id: shortid.generate() });\r\n  };\r\n\r\n  const addToContacts = (e) => {\r\n    e.preventDefault();\r\n    const { name } = form;\r\n    if (\r\n      contacts.find(\r\n        (contact) =>\r\n          contact.name.toLocaleLowerCase() === name.toLocaleLowerCase(),\r\n      )\r\n    ) {\r\n      notifyB();\r\n    } else {\r\n      dispatch(addContact(form));\r\n      setForm(formInitial);\r\n    }\r\n    setForm(formInitial);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.form}>\r\n      <form autoComplete=\"off\" onSubmit={addToContacts}>\r\n        <label className={classes[\"label-name\"]} htmlFor={contactsId}>\r\n          Name\r\n          <input\r\n            name=\"name\"\r\n            id={contactsId}\r\n            type=\"text\"\r\n            value={form.name}\r\n            onChange={inputHandlerContact}\r\n          />\r\n        </label>\r\n\r\n        <label className={classes[\"label-name\"]}>\r\n          Number\r\n          <input\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={form.number}\r\n            onChange={inputHandlerContact}\r\n          />\r\n        </label>\r\n\r\n        <div>\r\n          <button type=\"submit\">Add contact</button>\r\n          <ToastContainer />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import { ADD_CONTACT, DELETE_CONTACT, GET_LOCALSTORAGE } from \"../types\";\r\n\r\nexport const addContact = (data) => ({\r\n  type: ADD_CONTACT,\r\n  payload: data,\r\n});\r\n\r\nexport const deleteContacts = (id) => ({\r\n  type: DELETE_CONTACT,\r\n  payload: id,\r\n});\r\n\r\nexport const getLocalStorage = (arr) => ({\r\n  type: GET_LOCALSTORAGE,\r\n  payload: arr,\r\n});\r\n","export const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const GET_LOCALSTORAGE = \"GET_LOCALSTORAGE\";\r\nexport const INPUT_FILTER = \"INPUT_FILTER\";\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { inputHandlerFilters } from \"../../redux/actions/filter\";\r\nimport \"./Filter.css\";\r\n\r\nconst Filter = () => {\r\n  const contacts = useSelector((state) => state.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const inputHandlerFilter = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(inputHandlerFilters(value));\r\n  };\r\n\r\n  return (\r\n    <TransitionGroup>\r\n      {contacts.length > 1 && (\r\n        <CSSTransition\r\n          timeout={250}\r\n          classNames=\"filter\"\r\n          mountOnEnter\r\n          unmountOnExit\r\n        >\r\n          <div className=\"filter\">\r\n            <p>Find contacts by name</p>\r\n            <input name=\"filter\" type=\"text\" onChange={inputHandlerFilter} />\r\n          </div>\r\n        </CSSTransition>\r\n      )}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { INPUT_FILTER } from \"../types\";\r\n\r\nexport const inputHandlerFilters = (value) => ({\r\n  type: INPUT_FILTER,\r\n  payload: value,\r\n});\r\n","import React from \"react\";\r\nimport { deleteContacts } from \"../../redux/actions/contacts\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Contact = ({ name, number, id }) => {\r\n  const dispatch = useDispatch();\r\n  const deleteContact = () => dispatch(deleteContacts(id));\r\n\r\n  return (\r\n    <>\r\n      <p>{name}</p>\r\n      <p>{number}</p>\r\n\r\n      <button type=\"button\" id={id} className=\"delete\" onClick={deleteContact}>\r\n        X\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Contact from \"../Contact/Contact\";\r\n\r\nimport \"./ContactList.css\";\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector((state) => state.contacts);\r\n  const filter = useSelector((state) => state.filter);\r\n\r\n  const getFilterContacts = (filter, contacts) =>\r\n    contacts.filter(({ name }) =>\r\n      name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\r\n    );\r\n  const filteredContacts = getFilterContacts(filter, contacts);\r\n\r\n  return (\r\n    <div>\r\n      <TransitionGroup component=\"ul\">\r\n        {filteredContacts.length\r\n          ? filteredContacts.map((contact) => (\r\n              <CSSTransition\r\n                key={contact.id}\r\n                classNames=\"list-item\"\r\n                timeout={250}\r\n                mountOnEnter\r\n                unmountOnExit\r\n              >\r\n                <li className=\"list-item\">\r\n                  <Contact {...contact} />\r\n                </li>\r\n              </CSSTransition>\r\n            ))\r\n          : contacts.map((contact) => (\r\n              <CSSTransition\r\n                key={contact.name}\r\n                classNames=\"list-item\"\r\n                timeout={250}\r\n                mountOnEnter\r\n                unmountOnExit\r\n              >\r\n                <li className=\"list-item\">\r\n                  <Contact {...contact} />\r\n                </li>\r\n              </CSSTransition>\r\n            ))}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","const save = (key, value) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (err) {\n      throw new Error();\n    }\n  };\n  const get = key => {\n    try {\n      const items = localStorage.getItem(key);\n      return items ? JSON.parse(items) : null;\n    } catch (err) {\n      throw new Error();\n    }\n  };\n  export default {\n    save,\n    get,\n  }","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nimport { getLocalStorage } from \"./redux/actions/contacts\";\n\nimport storage from \"./utils/storage\";\nimport \"./App.css\";\n\nconst contactsData = storage.get(\"contacts\");\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.add(contactsData);\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.props.contacts) {\n      storage.save(\"contacts\", this.props.contacts);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <CSSTransition\n          in={true}\n          classNames=\"phonebook\"\n          timeout={500}\n          mountOnEnter\n          unmountOnExit\n        >\n          <div className=\"phonebook\">\n            <h1>Phonebook</h1>\n          </div>\n        </CSSTransition>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst MSTP = (state) => ({ contacts: state.contacts });\nconst MDTP = (dispatch) => ({\n  add: () => dispatch(getLocalStorage(contactsData)),\n});\n\nexport default connect(MSTP, MDTP)(App);\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"ADD_CONTACT\");\r\n\r\nexport const deleteContacts = createAction(\"DELETE_CONTACT\");\r\n\r\nexport const getLocalStorage = createAction(\"GET_LOCALSTORAGE\");\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContacts, getLocalStorage } from \"./action\";\r\n\r\nconst initialState = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\nexport const contactsReducer = createReducer(initialState, {\r\n  [addContact]: (state, action) => [...state, action.payload],\r\n  [deleteContacts]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n  [getLocalStorage]: (state, action) =>\r\n    !action.payload ? state : action.payload,\r\n});\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const inputHandlerFilters = createAction(\"INPUT_FILTER\");\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { inputHandlerFilters } from \"../filter/action\";\r\n\r\nexport const filterReducer = createReducer(\"\", {\r\n  [inputHandlerFilters]: (state, action) => action.payload,\r\n});\r\n","import { combineReducers } from \"redux\";\r\n// import { contactsReducer } from \"./contacts\";\r\nimport { contactsReducer } from \"./contacts/reducer\";\r\nimport { filterReducer } from \"./filter/reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootModule from \"./rootModule\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootModule,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n// import store from \"./redux/store/store\";\nimport store from \"./module/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}